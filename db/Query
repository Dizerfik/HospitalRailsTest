CREATE TABLE patients
(
    id SERIAL PRIMARY KEY,
    first_name CHARACTER VARYING(30) NOT NULL,
    last_name CHARACTER VARYING(30) NOT NULL,
	middle_name CHARACTER VARYING(30),
	birthday DATE NOT NULL CHECK (birthday <= CURRENT_DATE AND
	birthday >= CURRENT_DATE - INTERVAL '150 years'),
	gender CHAR(1) NOT NULL CHECK (gender IN ('M', 'F')),
	height SMALLINT NOT NULL CHECK (height BETWEEN 50 AND 300),
	weight NUMERIC(6,3) NOT NULL CHECK (weight BETWEEN 0 AND 800),
	created_at TIMESTAMPTZ  NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMPTZ  NOT NULL DEFAULT CURRENT_TIMESTAMP,
	
	CONSTRAINT uk_patient_fullname_birthday
	UNIQUE (first_name, last_name, birthday)
);

CREATE TABLE doctors
(
	id SERIAL PRIMARY KEY,
	first_name CHARACTER VARYING(30) NOT NULL,
    last_name CHARACTER VARYING(30) NOT NULL,
	middle_name CHARACTER VARYING(30) NOT NULL,

	CONSTRAINT uk_docktor_fullname_birthday
	UNIQUE (first_name, middle_name, last_name)
);

CREATE TABLE patient_doctors (
    id SERIAL PRIMARY KEY,
    patient_id INT NOT NULL,
    doctor_id INT NOT NULL,
	
	CONSTRAINT fk_patient FOREIGN KEY (patient_id)
	REFERENCES patients(id) ON DELETE CASCADE,
    CONSTRAINT fk_doctor FOREIGN KEY (doctor_id)
	REFERENCES doctors(id) ON DELETE CASCADE
);

CREATE TABLE bmr_calculations (
    id SERIAL PRIMARY KEY,
    patient_id INT NOT NULL,
    formula VARCHAR NOT NULL,
    physical_activity INT NOT NULL CHECK (physical_activity BETWEEN 0 AND 4),
    value NUMERIC(7,3) NOT NULL,
    created_at TIMESTAMPTZ  NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_at TIMESTAMPTZ  NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_bmr_patient FOREIGN KEY (patient_id)
	REFERENCES patients (id) ON DELETE CASCADE
        
);

CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_patient_updated_at 
    BEFORE UPDATE ON patients
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();	
